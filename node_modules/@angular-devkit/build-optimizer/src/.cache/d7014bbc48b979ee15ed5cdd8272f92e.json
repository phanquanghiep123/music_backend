{"remainingRequest":"D:\\angulars\\music_backend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\angulars\\music_backend\\node_modules\\rxjs\\_esm5\\internal\\operators\\merge.js","dependencies":[{"path":"D:\\angulars\\music_backend\\node_modules\\rxjs\\_esm5\\internal\\operators\\merge.js","mtime":1534912626214},{"path":"D:\\angulars\\music_backend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534912565481},{"path":"D:\\angulars\\music_backend\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1534912534864}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\n/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\nimport { merge as mergeStatic } from '../observable/merge';\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=merge.js.map\n",null]}